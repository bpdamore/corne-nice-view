/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    deletekey {
      bindings = <&kp DELETE>;
      key-positions = <39 11>;
    };

    winbutton {
      bindings = <&kp LEFT_GUI>;
      key-positions = <36 38>;
    };

    Copy {
      bindings = <&kp LC(C)>;
      key-positions = <0 1>;
    };

    Paste {
      bindings = <&kp LC(V)>;
      key-positions = <12 13>;
    };

    Linux_Terminal {
      bindings = <&kp LC(LA(T))>;
      key-positions = <24 25 26 27>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y            &kp U  &kp I      &kp O    &kp P          &kp BACKSPACE
&kp LSHFT  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H            &kp J  &kp K      &kp L    &kp SEMICOLON  &kp APOS
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp LEFT_ALT
                         &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RIGHT_SHIFT  &mo 2  &kp ENTER
      >;
    };

    raise {
      bindings = <
&trans  &trans  &kp HOME       &kp UP    &kp END    &kp COLON        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS      &kp ASTERISK  &trans
&trans  &trans  &kp LEFT       &kp DOWN  &kp RIGHT  &kp BACKSLASH    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0  &kp SLASH     &trans
&trans  &trans  &kp PAGE_DOWN  &trans    &kp PG_UP  &trans           &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp MINUS     &kp EQUAL     &trans
                               &trans    &trans     &trans           &trans        &mo 3         &trans
      >;
    };

    lower {
      bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH              &kp DLLR               &kp PRCNT    &kp CARET  &kp AMPS          &kp KP_MULTIPLY    &kp LPAR   &kp RPAR   &trans
&trans  &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL    &kp MINUS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GRAVE  &kp BSLH   &trans
&trans  &trans    &trans  &trans                &trans                 &kp PLUS     &kp UNDER  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE   &kp TILDE  &trans
                          &trans                &mo 3                  &trans       &trans     &trans            &trans
      >;
    };

    both {
      bindings = <
&bt BT_CLR    &trans  &trans      &trans        &trans           &bt BT_SEL 0    &bt BT_SEL 3  &trans                &trans                &trans         &trans   &trans
&trans        &trans  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &bt BT_SEL 1    &bt BT_SEL 4  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans         &trans   &trans
&out OUT_BLE  &trans  &trans      &trans        &trans           &bt BT_SEL 2    &trans        &kp NUMBER_1          &kp RIGHT_CONTROL     &kp RIGHT_ALT  &kp DEL  &trans
                                  &trans        &trans           &trans          &trans        &trans                &trans
      >;
    };
  };
};
